digraph cfg {
ordering=out;
basic_block4 [label="basic_block_if true\nmethod stdlib\nstart call \ntemp24 = 66666666\ntemp23 = temp24\ntemp22 = temp23\nparam 22\ncall print\nend if \n"];
basic_block5 [label="basic_block_else \nmethod stdlib\nstart call \ntemp27 = 77777777\ntemp26 = temp27\ntemp25 = temp26\nparam 25\ncall print\nend else \n"];
basic_block6 [label="basic_block_end if \n"];
basic_block3 [label="basic_block_if true\ntemp19 = 3\ntemp18 = temp19\ntemp21 = 4\ntemp20 = temp21\ntemp17 = temp18 > temp20\nif \n"];
basic_block7 [label="basic_block_else \nmethod stdlib\nstart call \ntemp30 = 888888888\ntemp29 = temp30\ntemp28 = temp29\nparam 28\ncall print\nend else \n"];
basic_block8 [label="basic_block_method stdlib\nstart call \ntemp33 = 999999999\ntemp32 = temp33\ntemp31 = temp32\nparam 31\ncall print\nexit \nclass 0\nfunction 11\ntemp-4 ; \nprint 11\nreturn\nfunction 19\ntemp-4 ; \nsystem \nreturn\nendclass \nclass 1\ntemp3 ; \ntemp4 ; \nfunction 29\ntemp-4 ; \nreadpol \nreturn\nfunction 37\ntemp2 = 3\ntemp1 = temp2\ntemp0 = temp1\ntemp0 = temp0\ntemp5 = 3\ntemp4 = temp5\ntemp3 = temp4\ntemp1 = temp3\ntemp8 = temp1\ntemp7 = temp8\ntemp6 = temp7\nreturn 6 0\nendclass \n"];
basic_block2 [label="basic_block_jump 0\ninstructions \nsubinstructions 0\nsubinstructions -9\nsubinstructions 36\ntemp0 ; \ntemp1 ; \ntemp2 ; \ninstance class 0 0\ntemp1 = temp0\ninstance class 1 2\ntemp3 ; \ntemp4 ; \ntemp2 = temp1\nmethod poly\nstart call \ntemp5 = 3*X^3 + 2*X^2 + 1*X^1\ntemp4 = temp5\ntemp3 = temp4\nparam 3\ncall readpol\nmethod stdlib\nstart call \ntemp8 = EEEE\ntemp7 = temp8\ntemp6 = temp7\nparam 6\ncall print\nmethod stdlib\nstart call \ntemp11 = temp4\ntemp10 = temp11\ntemp9 = temp10\nparam 9\ncall print\ntemp14 = 1\ntemp13 = temp14\ntemp16 = 2\ntemp15 = temp16\ntemp12 = temp13 > temp15\nif \n"];
basic_block2->basic_block3;
basic_block3->basic_block4;
basic_block4->basic_block6;
basic_block6->basic_block8;
basic_block3->basic_block5;
basic_block5->basic_block6;
basic_block2->basic_block7;
basic_block7->basic_block8;


}